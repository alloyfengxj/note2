HTML5笔记Canvas

标签
<canvas id="c1" width="400" height="400">
	<span>不支持canvas浏览器</span>
</canvas> <!--默认：宽300 高150-->
绘图环境
	getContext('2d')//目前只支持2d的
	var oC = document.getElementById('c1');
	var oGC = oC.getContext('2d');  //webgl : 3D绘图
绘制方块
	oGC.fillRect(50,50,100,100);//默认颜色是黑色的left,top,width,height//起点 宽高
	oGC.strokeRect(50.5,50.5,100,100);//带边框的方块，默认一像素的黑色边框
设置绘图
	oGC.fillStyle = 'red';//填充颜色
	oGC.strokeStyle = 'blue';//边线颜色
	oGC.lineWidth = 10;//线宽度,是一个数值
	oGC.fillRect(50,50,100,100);
	oGC.strokeRect(50.5,50.5,100,100);
边界绘制
	*lineJoin:边界链接点样式
		miter(默认)、round(圆角)、bevel(斜角)
		oGC.lineJoin = 'bevel';
	lineCap:端点样式
		butt(默认)、round(圆角)、square(高度多出宽一半的值)
绘制路径1
	oGC.beginPath();//开始绘制路径
	oGC.closePath();//结束绘制路径
	oGC.moveTo(100,100);//移动到绘制的新目标点
	oGC.lineTo(200,300);//新的目标点
绘制路径2
	oGc.stroke(),//划线，默认黑色
	oGc.fill(),//填充默认黑色
	oGc.rect(),//矩形区域6
	****oGc.clearRect(),//删除一个画布的矩形区域6
	oGc.save(),//保存路径7
	oGc.restore()//恢复路径7
	小例子1：鼠标划线
	小例子1：方块移动
	var oC = document.getElementById('c1');
	var oGC = oC.getContext('2d');  
	oGC.beginPath();
	oGC.rect(100,100,100,100);
	oGC.closePath();
	oGC.fill();
	oGC.clearRect(0,0,oC.width,oC.height); //坐标 宽高

	var oC = document.getElementById('c1');
	var oGC = oC.getContext('2d');  
	*oGC.save();
	oGC.fillStyle = 'red';
	oGC.beginPath();
	oGC.moveTo(100,100);
	oGC.lineTo(200,200);
	oGC.lineTo(300,200);
	oGC.closePath();
	oGC.fill();
	*oGC.restore();
***绘制圆v2
	arc(X,Y,半径，起始弧度，结束弧度，旋转方向)
		X,Y：起始位置（圆心）
		弧度与角度的关系：弧度=角度*math.PI/180
		旋转方向：顺时针（默认false）、逆时针（true）
		***例子：用arc去画个钟表 
绘制其它曲线
	arcTo(x1,y1,x2,y2,r)
		第一组坐标、第二组坐标、半径
	quadraticCurveTo(dx,dy,x1,y1)
		贝塞尔曲线：第一组控制点、第二组结束坐标
	bezierCureTo(dx1,dy1,dx2,dy2,x1,y1)
		贝赛尔曲线：第一组控制点、第二组控制点、第三组结束坐标
变换
****translate
	偏移：从起始点为基准点，移动当前坐标位置translate() 方法重新映射画布上的 (0,0) 位置。
	translate(100,100)
rotate//单位为弧度
	旋转：参数为弧度
	例子：旋转的小方块
	oGc.rotate(45*math.PI/180)//旋转45度
	注意：rotate的累加
scale
	oGc.scale(a,b),a:宽的比例，b：高的比例
	缩放例子：旋转加缩放的小方块6

插入图片V3
	等图片加载完，再执行canvas操作
		图片预加载：在onload中调用方法
	****drawImage(oImg,x,y,w,h)2
		oImg:当前图片x、y:坐标w、y：宽高
		drawImage(oImg,x,y)//不写宽高的话图片自适应，多余的部分被隐藏。
设置背景V3 3
	****createPattern(oImg,平铺方式)
		-2参为：repeat repeat-x repeat-y no-repeat
			var oC =document.getElementById('c1');
			var oGC = oC.getContext('2d');
			var yImg = new Image();
			yImg.onload = function(){
				draw(this);
			};
			yImg.src = '2.png';
			function draw(obj){
				var bg=oGC.createPattern(obj,'repeat');
				oGC.fillStyle = bg;
				oGC.fillRect(0,0,300,300);
			}
渐变V3 4
	createLinearGradient(x1,y1,x2,y2)
		线性渐变 3
		第一组参数：起始点坐标、第二组参数：结束坐标
		addColorStop(位置，颜色) 添加渐变点
			obj.addColorStop(0,'red');//0起点
			obj.addColorStop(0.5,'yellow');
			obj.addColorStop(1,'blue');//1终点
	createRadialGradient(x1,y1,r1,x2,y2,r2)
		放射性渐变：
		参数：第一个圆的坐标和半径，第二个圆的坐标和半径

文本_1 v3
strokeText(文字，x,y)
	文字边框
fillText(文字，x,y)
	文字填充
font
	文字大小：'60px impact'//impact为文字样式必须要写
textAlign
	默认是start跟left一样的效果end right center
textBaseline
	文字上下的位置的方式默认：alphabetic
		oGC.textBaseline = 'top';  //middle bottom
文本_2 v3
	**measureText() 7
		measureText(str).width//获取文字宽度只有宽度，没有高度
		例子：文字居中
阴影
	shadowOffsetX、shadowOffsetY
		x轴偏移、Y轴偏移
	shadowBlur
		高斯模糊值
	shadowColor
		阴影颜色
		ctx.shadowOffsetX = 15; // 阴影Y轴偏移
		ctx.shadowOffsetY = 15; // 阴影X轴偏移
		ctx.shadowBlur = 14; // 模糊尺寸
		ctx.shadowColor = 'rgba(0, 0, 0, 0.5)'; // 颜色

			oGC.save();
			oGC.font = '60px impact';
			oGC.textBaseline = 'top';
			oGC.fillStyle = 'red';
			oGC.shadowOffsetX = 10;
			oGC.shadowOffsetY = 10;
			oGC.shadowColor = 'green';
			oGC.shadowBlur = 5;
			var w = oGC.measureText('简易祖玛').width;
			var h = 60;
			oGC.fillText('简易祖玛', (oC.width - w)/2 , 450 );
			oGC.restore();
像素v4
	****getImageData(x,y,w,h)
		获取图像数据
	*******putImageData(获取图像，x,y)2
		设置新的图像数据
	属性
		width：一行的像素个数
		height：一列的像素个数
		data：一个数组，包含每个像素的rgba四个值，注意每个值都在0-255之间的整数
	var oC = document.getElementById('c1');
	var oGC = oC.getContext('2d');
	oGC.fillRect(0,0,100,100);
	var oImg = oGC.getImageData(0,0,100,100)
	alert( oImg.width );  //一行的像素个数

像素_2 v4
	****createImageData(w,h)2
		生成新的像素矩阵，初始值是全透明的黑色，即(0,0,0,0)
		
			var oC = document.getElementById('c1');
			var oGC = oC.getContext('2d');
			var oImg = oGC.createImageData(100,100);
			for(var i=0;i<oImg.width*oImg.height;i++){
				oImg.data[4*i] = 255;
				oImg.data[4*i+1] = 0;
				oImg.data[4*i+2] = 0;
				oImg.data[4*i+3] = 100;
			}
			oGC.putImageData(oImg,100,100);
	***像素显字 3、4
	获取和设置指定坐标
		封装：getXY、setXY
	图片的像素操作
		必须是同源下
		例子：***反色6、***倒影7、***渐变8等
		例子：马赛克效果9

合成v5
	全局阿尔法值1
		globalAlpha
			oGC.globalAlpha=0.5;
	覆盖合成2
		源：新的图形
		目标：已经绘制过的图形
		globalCompositeOperation属性//全局合成操作
			sourrce-over(默认) destination-over source-atop
			destination-atop source-in destination-in
			source-out destination-out lighter
			copy xor

将画布导出为图像v5 3
	 oC.toDataURL();
	 	火狐右键可以直接导出成图片
事件操作v5 4  重点6
 	****isPointInpatn//针对后一次的图形
 		是否在点击范围内
 		jCanvaScript(canvas中的jquery)7-10
 			http://jcscript.com/
 	var oImg = document.getElementById('img1');
	var oC = document.getElementById('c1');
	var oGC = oC.getContext('2d');
	oGC.beginPath();
	oGC.arc(100,100,50,0,360*Math.PI/180,false);
	oGC.closePath();
	oGC.fill();
	oC.onmousedown = function(ev){
		var ev = ev || window.event;
		var x = ev.clientX - oC.offsetLeft;
		var y = ev.clientY - oC.offsetTop;
		if( oGC.isPointInPath(x,y) ){
			alert(123);
		}
	};
