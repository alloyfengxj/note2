CSS3笔记2盒模型

弹性盒模型1.html 2.html
	****注意在使用弹性盒模型的时候 父元素必须要加display:box (要加浏览器前缀)或 display:inline-box// display:-webkit-box
	Box-orient 定义盒模型的布局方向//display:-webkit-box;-webkit-box-orient:vertical;
		Horizontal 水平显示(默认)
		vertical 垂直方向
	box-direction 元素排列顺序//-webkit-box-direction:Reverse;
		Normal 正序
		Reverse 反序
	box-ordinal-group 设置元素的具体位置//4.html //.box div:nth-of-type(1){-webkit-box-ordinal-group:2;}
弹性盒模型(2)
	***Box-flex 定义盒子的弹性空间//.box div:nth-of-type(2){-webkit-box-flex:2;} 5.html 
		子元素的尺寸=盒子的尺寸*子元素的box-flex属性值 / 所有子元素的box-flex属性值的和 
	***box-pack 对盒子富裕的空间进行管理//-webkit-box-pack:Justify; 6.html
		start 所有子元素在盒子左侧显示，富裕空间在右侧
		end 所有子元素在盒子右侧显示，富裕空间在左侧
		center 所有子元素居中
		justify 富余空间在子元素之间平均分布
弹性盒模型(3)
	***box-align 在垂直方向上对元素的位置进行管理//-webkit-box-align:center
		Star 所有子元素在据顶
		End 所有子元素在据底
		Center 所有子元素居中

盒模型阴影
	用法//10.html
		box-shadow:[inset] x y blur [spread] color//常规用法跟text-shadow一样
			//box-shadow:inset 10px 10px 30px blue;
		参数
			inset：投影方式
				inset：内投影
				不给：外投影
			x、y：阴影偏移
			blur：模糊半径
			spread：扩展阴影半径****
				先扩展原有形状，再开始画阴影
			color
			//box-shadow:0 0 30px 30px #000,inset 0 0 30px yellow;//第一个30为模糊半径第二个30为扩展阴影半径
其他盒模型新增属性//
	***box-reflect 倒影//只在webkit中//11.html//-webkit-box-reflect:below
		direction  方向     above|below|left|right;
		距离(可选)//12.html   -webkit-box-reflect:right 10px
		渐变（可选）//13,14.html **
	***resize 自由缩放// resize:both  overflow:auto;
		Both 水平垂直都可以缩放
		Horizontal 只有水平方向可以缩放
		Vertical 只有垂直方向可以缩放
		*****注意：一定要配合overflow:auto 一块使用只有水平方向可以缩放
其他盒模型新增属性(2)//16.
	****box-sizing 盒模型解析模式
		Content-box  标准盒模型 width/height=border+padding+content
		****Border-box 怪异盒模型 width/height=content//padding也被去掉html
Css3分栏布局--仅-webkit//text-indent:2em;//17 18.html
	column-width 栏目宽度//-webkit-column-width:250px;
	column-count 栏目列数// -webkit-column-count:4;
	column-gap   栏目距离//-webkit-column-gap:30px;
	column-rule  栏目间隔线 // -webkit-column-rule:1px solid #000;
Css3响应式布局media 不支持IE678//19 20 21.html
	<link rel="stylesheet" type="text/css" href="indexb.css" media="screen and (min-width:400px) and (max-width: 800px)">
	横竖屏
		<link rel="stylesheet" media="all and (orientation:portrait)" href="indexb.css">
		<link rel="stylesheet" media="all and (orientation:landscape)" href="indexa.css">
	媒体类型
		all 所有媒体
		braille 盲文触觉设备
		embossed 盲文打印机
		print 手持设备 
		projection 打印预览
		screen 彩屏设备
		speech '听觉'类似的媒体类型
		tty 不适用像素的设备
		tv  电视
	关键字
		and
		not      not关键字是用来排除某种制定的媒体类型
		only     only用来定某种特定的媒体类型
	媒体特性
		(max-width:600px) 
		(max-device-width: 480px)  设备输出宽度
		(orientation:portrait)  竖屏
		(orientation:landscape)	横屏
		(-webkit-min-device-pixel-ratio: 2) 像素比
				devicePixelRatio 设备像素比 window.devicePixelRatio = 物理像素 / dips
	样式引入
		<link rel="stylesheet" type="text/css" href="../css/print.css" media="print" />
		 @import url("css/reset.css") screen;
		@media screen{
		      选择器{
		 	属性：属性值；
		     }
		   }

	<link rel=”stylesheet” media=”all and (orientation:portrait)” href=”portrait.css”>
	<link rel=”stylesheet” media=”all and (orientation:landscape)”href=”landscape.css”>
	***@media screen and (min-width:400px) and (max-width:500px) {.box {margin: 0 auto;}}
	<link rel="stylesheet" type="text/css" href="styleA.css"  media="screen and (min-width: 800px)">
	<link rel="stylesheet" type="text/css" href="styleB.css" media="screen and (min-width: 600px) and (max-width: 800px)">
	<link rel="stylesheet" type="text/css" href="styleC.css"    media="screen and (max-width: 600px)">

	<meta name="viewport" content="" />
	width [pixel_value | device-height]
	height [pixel_value | device-height]
	user-scalable 是否允许缩放 （no||yes）
	initial-scale 初始比例
	minimum-scale 允许缩放的最小比例
	maximum-scale 允许缩放的最大比例 
	target-densitydpi [dpi_value | device-dpi | high-dpi | medium-dpi | low-dpi] 













